name: Development Workflow
on:
  pull_request:
    branches:
      - main
    
permissions:
  contents: read

concurrency: production

jobs:
  lint-test:
    name: Lint, Test & Code coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set Up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run Lint
        run: npx eslint --ext .js src/ --fix-dry-run
      - name: Run test
        run: npm test -- --coverage
      - name: Upload Coverage
        uses: codecov/codecov-action@v3

  security-checks:
    name: Run security checks
    needs: lint-test
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=critical

  bump_version:
    name: Bump version
    runs-on: ubuntu-latest
    needs: [lint-test, security-checks]
    permissions: write-all
    outputs:
      new_tag: ${{ steps.taggerBumper.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: '0'
      - name: Bump version
        id: taggerBumper
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          RELEASE_BRANCHES: 'main'
          DEFAULT_BUMP: patch

  get_commit_sha:
      name: Get SHA
      needs: [lint-test, security-checks]
      runs-on: ubuntu-latest
      outputs:
        sha_output: ${{ steps.short_sha_generator.outputs.SHORT_SHA }}
      steps:
        - name: Check out code
          uses: actions/checkout@v3
        - name: Get short SHA
          id: short_sha_generator
          run: echo “SHORT_SHA=$(git rev-parse --short HEAD)” >> $GITHUB_OUTPUT

  push_to_docker:
    name: Push image to docker
    needs: [bump_version, get_commit_sha]
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Build and push Docker image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: jallumkones/places-app
          tags: latest, ${{ needs.bump_version.outputs.new_tag }}-SNAPSHOT
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}   